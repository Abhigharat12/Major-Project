
<% layout("/layouts/boilerplate.ejs") -%>

<!-- CSS for custom layout -->
<style>
  .stack {
    width: 100%;
    max-width: 400px;
    transition: 0.25s ease;
  }
  .stack:hover {
    transform: rotate(5deg);
  }
  .stack:hover .card:before {
    transform: translateY(-2%) rotate(-4deg);
  }
  .stack:hover .card:after {
    transform: translateY(2%) rotate(4deg);
  }

  .card {
    aspect-ratio: 10 / 8;
    border: 2px solid;
    background-color: #fff;
    position: relative;
    transition: 0.15s ease;
    cursor: pointer;
    padding: 0;
  }
  .card:before,
  .card:after {
    content: "";
    position: absolute;
    height: 100%;
    width: 100%;
    border: 4px solid;
    background-color: #fff;
    z-index: -1;
    transition: 0.15s ease;
    top: 0;
    left: 0;
    transform-origin: center center;
  }
  .card:before {
    transform: translateY(-2%) rotate(-6deg);
  }
  .card:after {
    transform: translateY(2%) rotate(6deg);
  }

  .image {
    width: 100%;
    height: 100%;
    background-color: #eee;
    border: 4px solid;
  }
  .feelalive-popup .maplibregl-popup-content {
    font-family: 'Segoe UI', sans-serif;
    padding: 10px 14px;
    background: linear-gradient(135deg, #ffffff, #f1f9ff);
    color: #333;
    border-radius: 8px;
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
    min-width: 200px;
  }
  #map {
    height: 400px;
    border-radius: 10px;
    margin-bottom: 1rem;
  }
</style>

<!-- MapLibre CSS -->
<link href="https://unpkg.com/maplibre-gl@3.6.1/dist/maplibre-gl.css" rel="stylesheet" />
<script src="https://unpkg.com/maplibre-gl@3.6.1/dist/maplibre-gl.js"></script>

<body class="p-4">
  <div class="container">
    <h3 class="mb-4 text-success text-center" style="margin-top: 1rem;"><%= listing.title %></h3>

    <div class="row align-items-center gy-4">
      <!-- Listing Info -->
      <div class="col-12 col-md-6">
        <ul class="list-group shadow-sm mb-4">
          <li class="list-group-item"><strong>Title:</strong> <%= listing.title %></li>
          <li class="list-group-item"><strong>Owner:</strong> <%= listing.owner.username %></li>
          <li class="list-group-item"><strong>Description:</strong> <%= listing.description %></li>
          <li class="list-group-item"><strong>Price:</strong> â‚¹ <%= listing.price.toLocaleString("en-IN") %></li>
          <li class="list-group-item"><strong>Location:</strong> <%= listing.location %></li>
          <li class="list-group-item"><strong>Country:</strong> <%= listing.country %></li>
        </ul>
        <div class="d-flex flex-wrap gap-2">
          <a href="/listings/<%= listing._id %>/edit" class="btn btn-warning">Edit</a>
          <form method="POST" action="/listings/<%= listing._id %>?_method=DELETE">
            <button class="btn btn-danger">Delete</button>
          </form>
        </div>
      </div>

      <!-- Image Card -->
      <div class="col-12 col-md-6 d-flex justify-content-center">
        <div class="stack">
          <div class="card">
            <div class="image" style="background-image: url('<%= listing.image.url %>'); background-size: cover; background-position: center;"></div>
          </div>
        </div>
      </div>
    </div>


  <!-- Review Form -->
    <div class="mt-5 p-4 bg-light rounded shadow-sm">
      <h4 class="mb-4 text-primary">Leave a Review</h4>
      <form method="POST" action="/listings/<%= listing._id %>/reviews" novalidate class="needs-validation">
        <!-- Starability (Only rating option) -->
        <fieldset class="starability-slot mb-4">
          <legend class="form-label fw-semibold">Rating</legend>
          <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="1" checked aria-label="No rating." />
          <input type="radio" id="first-rate1" name="review[rating]" value="1" />
          <label for="first-rate1" title="Terrible">1 star</label>
          <input type="radio" id="first-rate2" name="review[rating]" value="2" />
          <label for="first-rate2" title="Not good">2 stars</label>
          <input type="radio" id="first-rate3" name="review[rating]" value="3" />
          <label for="first-rate3" title="Average">3 stars</label>
          <input type="radio" id="first-rate4" name="review[rating]" value="4" />
          <label for="first-rate4" title="Very good">4 stars</label>
          <input type="radio" id="first-rate5" name="review[rating]" value="5" />
          <label for="first-rate5" title="Amazing">5 stars</label>
        </fieldset>

        <!-- Comment -->
        <div class="mb-3">
          <label for="comment" class="form-label fw-semibold">Comment</label>
          <textarea name="review[comment]" id="comment" rows="4" class="form-control shadow-sm" placeholder="Write your feedback here..." required></textarea>
          <div class="invalid-feedback">Please add some comments for review</div>
        </div>
        

        <button class="btn-style-1" style="background: linear-gradient(135deg, #2a71be, #0549a3);">Add Review</button>
      </form>
    </div>

    <hr />

    <!-- All Reviews -->
    <h4 class="mb-4">All Reviews</h4>
    <div class="row g-4">
      <% listing.reviews.forEach((review) => { %>
        <div class="col-md-6">
          <div class="p-4 bg-white border rounded-4 shadow-sm h-100 d-flex flex-column justify-content-between">
            <div class="d-flex align-items-center mb-3">
              <% const avatarUrl = (review.author && review.author.gender === 'female')
                  ? 'https://cdn-icons-png.flaticon.com/512/2922/2922561.png'
                  : 'https://cdn-icons-png.flaticon.com/512/2922/2922510.png'; %>
              <img 
                src="<%= avatarUrl %>" 
                class="rounded-circle border me-3" 
                alt="User avatar" 
                width="50" 
                height="50"
              />
              <div>
                <h6 class="mb-0 text-dark fw-semibold">@<%= review.author?.username || "Unknown" %></h6>
                <small class="text-muted">
                  <%= review.createdAt ? new Date(review.createdAt).toLocaleDateString("en-IN", { day: 'numeric', month: 'long', year: 'numeric' }) : "No date" %>
                </small>
              </div>
            </div>

            <p class="starability-result" data-rating="<%= review.rating %>">
              Rated: <%= review.rating %> star<%= review.rating > 1 ? 's' : '' %>
            </p>

            <p class="text-dark flex-grow-1" style="line-height: 1.6;"><%= review.comment %></p>

            <form method="POST" action="/listings/<%= listing._id %>/reviews/<%= review._id %>?_method=DELETE" class="mt-3">
              <button class="btn btn-sm btn-outline-danger w-100">
                <i class="fa-solid fa-trash"></i> Delete Review
              </button>
            </form>
          </div>
        </div>
      <% }); %>
    </div>
  </div>

 <hr>
    <h3>Location for <%= listing.title %></h3>
    <div id="map"></div>
    <div id="directions-container">
      <button id="get-route-btn" class="btn btn-primary mb-2">Show Street Route</button>
      <div id="directions-output" style="max-height: 200px; overflow-y: auto;"></div>
    </div>
  </div>

  <!-- JavaScript for Map and Route -->
  <script>
    const MAPTILER_KEY = "<%= process.env.MAPTILER_KEY %>";
    const ORS_KEY = "<%= process.env.ORS_KEY %>";
    const listingTitle = "<%= listing.title %>";
    const listingAddress = "<%= listing.location %>";
    let map, listingCoords;

    fetch(`https://api.maptiler.com/geocoding/${encodeURIComponent(listingAddress)}.json?key=${MAPTILER_KEY}`)
      .then(res => res.json())
      .then(data => {
        if (!data.features.length) throw new Error("Location not found");
        listingCoords = data.features[0].center;

        map = new maplibregl.Map({
          container: 'map',
          style: `https://api.maptiler.com/maps/streets-v2/style.json?key=${MAPTILER_KEY}`,
          center: listingCoords,
          zoom: 12
        });

        map.addControl(new maplibregl.NavigationControl());
        map.addControl(new maplibregl.GeolocateControl({
          positionOptions: { enableHighAccuracy: true },
          trackUserLocation: true,
          showUserHeading: true
        }));

        const marker = new maplibregl.Marker({ color: 'tomato' })
  .setLngLat(listingCoords)
  .setPopup(
    new maplibregl.Popup({ offset: 25 }) // optional offset
      .setHTML(`<strong>${listingTitle}</strong><br><em>You will be here</em>`)
  )
  .addTo(map);

// Show the popup immediately

      });

    document.addEventListener('DOMContentLoaded', () => {
      const btn = document.getElementById("get-route-btn");
      btn.addEventListener("click", () => {
        if (!navigator.geolocation) return alert("Geolocation not supported");

        navigator.geolocation.getCurrentPosition(position => {
          const userCoords = [position.coords.longitude, position.coords.latitude];

          new maplibregl.Marker({ color: 'blue' })
            .setLngLat(userCoords)
            .setPopup(new maplibregl.Popup().setText("You are here"))
            .addTo(map);

          fetch("https://api.openrouteservice.org/v2/directions/driving-car/geojson", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              "Authorization": ORS_KEY
            },
            body: JSON.stringify({ coordinates: [userCoords, listingCoords] })
          })
            .then(res => res.json())
            .then(route => {
              if (map.getSource('route')) map.removeSource('route');
              if (map.getLayer('route')) map.removeLayer('route');

              map.addSource('route', {
                type: 'geojson',
                data: route
              });

              map.addLayer({
                id: 'route',
                type: 'line',
                source: 'route',
                layout: {
                  'line-cap': 'round',
                  'line-join': 'round'
                },
                paint: {
                  'line-color': '#007bff',
                  'line-width': 4
                }
              });

              const outputDiv = document.getElementById("directions-output");
              const steps = route.features[0].properties.segments[0].steps;
              outputDiv.innerHTML = steps.map(step => `<p>${step.instruction}</p>`).join("");
            });
        });
      });
    });
  </script>
</body>
